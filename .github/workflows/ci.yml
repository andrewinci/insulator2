name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-mac-os:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 14.x
        uses: actions/setup-node@v3
        with:
          node-version: 14.x
          cache: "yarn"

      - uses: actions/cache@v3
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install npm dependencies
        run: |
          npm install -g yarn
          yarn install

      - name: Install dependencies
        run: brew install cmake openssl@3 cyrus-sasl

      - run: yarn lint

      - name: Cargo Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            src-tauri/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Artifacts cache
        uses: actions/cache@v3
        with:
          path: src-tauri/target/release/bundle/dmg/
          key: macOS-release #todo: hash of something that changes with versions

      - name: Build artifact
        run: yarn tauri build

      - uses: actions/upload-artifact@v3
        with:
          name: MacOS_insulator
          path: "src-tauri/target/release/bundle/dmg/Insulator 2_0.0.0_x64.dmg"

  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 14.x
        uses: actions/setup-node@v3
        with:
          node-version: 14.x
          cache: "yarn"

      - uses: actions/cache@v3
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install npm dependencies
        run: |
          npm install -g yarn
          yarn install

      - run: yarn lint

      - name: Install dependencies
        run: |
          sudo apt update -y
          sudo apt install libwebkit2gtk-4.0-dev libdbus-1-dev pkg-config libgtk-3-dev libsoup2.4-dev \
              build-essential curl wget libsasl2-dev libssl-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Cargo Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            src-tauri/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Artifacts cache
        uses: actions/cache@v3
        with:
          path: |
            src-tauri/target/release/bundle/deb/
            src-tauri/target/release/bundle/appimage/
          key: Linux-release #todo: hash of something that changes with versions

      - name: Build artifact
        run: yarn tauri build

  release:
    runs-on: ubuntu-latest
    needs: [build-ubuntu, build-mac-os]
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 14.x
        uses: actions/setup-node@v3
        with:
          node-version: 14.x
          cache: "yarn"

      - uses: actions/cache@v3
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install npm dependencies
        run: |
          npm install -g yarn
          yarn install

      - name: Ubuntu artifacts cache
        uses: actions/cache@v3
        with:
          path: |
            src-tauri/target/release/bundle/deb/
            src-tauri/target/release/bundle/appimage/
          key: Linux-release #todo: hash of something that changes with versions

      - name: MacOs artifacts cache
        uses: actions/cache@v3
        with:
          path: src-tauri/target/release/bundle/dmg/
          key: macOS-release #todo: hash of something that changes with versions

      - name: Semantic release
        if: github.ref == 'refs/heads/main'
        run: yarn release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
# WIP: Windows
# build-windows:
#   runs-on: windows-latest
#   steps:
#     - uses: actions/checkout@v3
#     - name: Use Node.js 14.x
#       uses: actions/setup-node@v3
#       with:
#         node-version: 14.x
#         cache: "yarn"
#     - run: npm install -g yarn

#     - name: Install dependencies
#       run: |
#         yarn install
#         vcpkg install openssl:x64-windows-static-md

#     - name: Cargo Cache
#       uses: actions/cache@v1
#       with:
#         path: ~/.cargo
#         key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.toml') }}
#         restore-keys: |
#           ${{ runner.os }}-cargo-${{ hashFiles('Cargo.toml') }}
#           ${{ runner.os }}-cargo

#     - name: Build
#       run: yarn tauri build
