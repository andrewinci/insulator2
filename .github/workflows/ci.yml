name: CI

on:
  push:
    tags:
      - "v*.*.*"
    branches: ["main"]
  pull_request:
    branches: ["main"]

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-12, ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3
      - uses: volta-cli/action@v3

      - name: Use node cache
        uses: actions/cache@v3
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install npm dependencies
        run: |
          npm install -g yarn
          yarn install

      - name: Install Ubuntu dependencies
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt update -y
          sudo apt install libwebkit2gtk-4.0-dev libdbus-1-dev pkg-config libgtk-3-dev libsoup2.4-dev \
              build-essential curl wget libsasl2-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Cargo Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            backend/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: (MacOS) Test and build
        if: matrix.os == 'macos-12' && !startsWith(github.ref, 'refs/tags/v')
        run: |
          # clean up cached bundle
          yarn rimraf backend/target/release/bundle/
          mkdir frontend/dist
          yarn test && yarn tauri build -b dmg

      - name: (Windows) Test and build
        if: matrix.os == 'windows-latest' && !startsWith(github.ref, 'refs/tags/v')
        run: |
          mkdir frontend/dist
          yarn test && yarn tauri build -b msi

      - name: (Linux) Install tarpaulin 
        if: matrix.os == 'ubuntu-latest' && !startsWith(github.ref, 'refs/tags/v')
        run: |
          cargo install cargo-tarpaulin || true          

      - name: (Linux) Coverage and build
        if: matrix.os == 'ubuntu-latest' && !startsWith(github.ref, 'refs/tags/v')
        run: |
          mkdir frontend/dist
          yarn lint:check
          # run unit and integration tests
          yarn coverage
          yarn tauri build -b deb appimage
          # upload coverage
          bash <(curl -s https://codecov.io/bash)
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Build release artifact
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          # clean up cached bundle
          yarn rimraf backend/target/release/bundle/
          # build
          yarn tauri build
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          GRAPHITE_TOKEN: ${{ secrets.GRAPHITE_TOKEN }}

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-artifacts
          path: backend/target/release/bundle/*
          retention-days: 1

      - name: (MacOS) Update manifest
        if: matrix.os == 'macOS-12' && startsWith(github.ref, 'refs/tags/v')
        run: |
          python3 ./scripts/update-manifest.py --target darwin
          # remove unused manifests
          rm manifests/update-linux.json manifests/update-windows.json

      - name: (Windows) Update manifest
        if: matrix.os == 'windows-latest' && startsWith(github.ref, 'refs/tags/v')
        run: |
          python ./scripts/update-manifest.py --target windows
          # remove unused manifests
          rm manifests/update-linux.json 
          rm manifests/update-darwin.json

      - name: (Linux) Update manifest
        if: matrix.os == 'ubuntu-latest' && startsWith(github.ref, 'refs/tags/v')
        run: |
          python ./scripts/update-manifest.py --target linux
          # remove unused manifests
          rm manifests/update-darwin.json manifests/update-windows.json

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          files: |
            manifests/update-linux.json
            backend/target/release/bundle/deb/insulator-*_amd64.deb
            backend/target/release/bundle/appimage/insulator-*_amd64.AppImage
            backend/target/release/bundle/appimage/insulator-*_amd64.AppImage.tar.gz
            manifests/update-darwin.json
            backend/target/release/bundle/dmg/*.dmg
            backend/target/release/bundle/macos/Insulator*.app.tar.gz
            manifests/update-windows.json
            backend/target/release/Insulator*.exe
            backend/target/release/bundle/msi/Insulator*.msi
            backend/target/release/bundle/msi/Insulator*.msi.zip
