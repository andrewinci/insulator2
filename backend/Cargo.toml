[package]
name = "insulator2"
version = "0.0.0"
description = "A client UI to inspect Kafka topics, consume, produce and much more."
authors = ["Andrea Vinci"]
license = "GPL-3"
repository = "https://github.com/andrewinci/insulator2.git"
edition = "2021"
rust-version = "1.64"

[build-dependencies]
tauri-build = { version = "1.3", features = [] }

[dependencies]
serde_json = "1.0"
dirs = "5.0.1"
serde = { version = "1.0.162", features = ["derive"] }
tauri = { version = "1.2", features = ["dialog-open", "dialog-save", "fs-write-file", "os-all", "updater", "window-create", "window-set-focus", "window-set-min-size", "window-set-title"] }
reqwest = { version = "0.11", features = ["json", "blocking"] }
url = { version = "2", features = ["serde"] }
tokio = { version = "1", features = ["full"] }
futures = { version = "0.3" }
apache-avro = { git = "https://github.com/apache/avro", rev = "b8b83b72f7184cf1b388fc20331d11eabbd93e06" }
log = { version = "0.4" }
env_logger = { version = "0.10.0" }
async-trait = "0.1.68"
num-bigint = "0.4"
rust_decimal = "1.29"
rusqlite = { version = "0.28.0", features = ["bundled", "backup", "hooks"] }
rust-keystore = { git = "https://github.com/andrewinci/rust-keystore", features = ["p12"], tag = "v0.1.2" }
r2d2 = "0.8.10"
r2d2_sqlite = "0.21.0"
toml = "0.7"
rand = "0.8.5"
time = "0.3.21"
sys-locale = "0.3.0"
uuid = "1.3.2"
rlimit = "0.9.1"

[target.'cfg(windows)'.dependencies]
rdkafka = { git = "https://github.com/andrewinci/rust-rdkafka.git", features = [
    "cmake-build",
    "ssl-vendored",
] } #todo: add "gssapi" to use scram on windows

[target.'cfg(unix)'.dependencies]
rdkafka = { git = "https://github.com/andrewinci/rust-rdkafka.git", features = [
    "cmake-build",
    "ssl-vendored",
    "gssapi",
] }

[patch.crates-io]
openssl-src = { git = "https://github.com/andrewinci/openssl-src-rs.git", branch = "release/111" }

[dev-dependencies]
mockall = "0.11.4"
httpmock = "0.6"
testcontainers = "0.14.0"
once_cell = "1.17.1"

[features]
# by default Tauri runs in production mode
# when `tauri dev` runs it is executed with `cargo run --no-default-features` if `devPath` is an URL
default = ["custom-protocol"]
# this feature is used used for production builds where `devPath` points to the filesystem
# DO NOT remove this
custom-protocol = ["tauri/custom-protocol"]
# Used for integration tests
integration_tests = []

[profile.release]
strip = true 
lto = true
opt-level = "s"
